//Twitch fetch
//Get your Tokens and clientID generated by https://twitchtokengenerator.com/
//***NOTE: Some features are only available if you've added the corresponding token scopes for greater access***
var accessToken = "h2u90sn9pwra8ijjn00aphvc37r0ls";
var refreshToken = "4a4ws79khy4cre87pjh9z9feu7klck2v3bl79yfsndkxuf2m37";
var clientID = "gp762nuuoqcoxypju8c569th9wz7q5";


function showTab(id, tabId) {
	for (element of document.getElementsByClassName("titleTabs")) {
		if (element.id == id) {
			document.getElementById(tabId).style.display = "block";
			document.getElementById(id).style.backgroundColor = "red";
		} else {
			document.getElementById(element.id).style.backgroundColor = "transparent";
			document.getElementById(element.id + "Tab").style.display = "none";
		}
	}
}

var channelName = "xfoofoo";
function fetchBasicInfo(channelName) {

	fetch("https://api.twitch.tv/helix/search/channels?query=" + channelName, {

		method: "GET",
		headers: {
			"Accept": "application/json",
            "client-id": clientID,
            "Authorization": "Bearer " + accessToken,
		}
	})
		.then((response) => { return response.json() })
		.then(data => {
            let inject = "";
            data.data.forEach((channel) => {
                if (channel.display_name.toLowerCase() == channelName){
                    inject += channel.display_name + "<br>"
                    + '<img class="Picture" src=' + '"' + channel.thumbnail_url + '" ' + 'alt="Gif not displaying correctly" />' + "<br>"
                    + "Live Now? " + channel.is_live.toString().toUpperCase() + "<br>";

                    document.getElementById("homeTab").innerHTML = inject;
                }	
            })
        })
}

var count = "100";
var period = "all";
var user_id = "";
function fetchBitLeaderboard(count, period, user_id) {

	fetch("https://api.twitch.tv/helix/bits/leaderboard?count=" + count + "&period=" + period + "&user_id=" + user_id, {

		method: "GET",
		headers: {
			"Accept": "application/json",
            "client-id": clientID,
            "Authorization": "Bearer " + accessToken,
		}
	})
		.then((response) => { return response.json() })
		.then(data => {
            let inject = "";
            data.data.forEach((user) => {
                inject += "<tr>" + "</tr>"

                /*may have problems where the injection keeps adding on the initial header in the html */
                document.getElementById("leaderboardsTable").innerHTML += inject;
                })	
            })
}



function startUpFunctions() {
    showTab("home", "homeTab");
	fetchBasicInfo(channelName);
    fetchBitLeaderboard(count, period, user_id);
}
window.onload = startUpFunctions();